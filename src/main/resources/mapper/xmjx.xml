<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        <!--这个namespace + 下面的id 就是一个完整的路径，在dao层我们写了完整的路径之后mybatis就是映射这个文件中的相关sql语句 -->
<mapper namespace="com.xmjx">
<!-- parameterType就是你接受的参数的类型，  -->
<!-- 添加用户信息 -->
<insert id="insertxmjx"  parameterType="java.util.Map">
 insert  into  xmjx(xm,jxsm,yh,sj,bz)  values(#{xm},#{jxsm},#{yh},#{sj},#{bz})
</insert>

<delete id="delxmjx" parameterType="int">
 delete  from  xmjx where xmjxid=#{xmjxid}
</delete>

<update id="updatexmjx" parameterType="java.util.Map">
update xmjx set xm=#{xm},jxsm=#{jxsm},yh=#{yh},sj=#{sj},bz=#{bz} where xmjxid=#{xmjxid}
</update>

<!--  查询返回的是 list<map> -->
<!-- resultType 就是返回查询结果的类型，而如果是resultMap=则返回的就是你定义的javabean  -->
<select  id="selectxmjx"  parameterType="int" resultType="java.util.Map">
  select  * from xmjx where xmjxid=#{xmjxid}
</select>

<!-- resultType 就是返回查询结果的类型，而如果是resultMap=则返回的就是你定义的javabean  -->
<select  id="selectall"  parameterType="java.util.Map" resultType="java.util.Map">
  select  a.*,b.xmmc from xmjx a,xiangmu b  where 1=1 and a.xm=b.xmid
    <if test=" null != yhm">
            and a.yh = #{yhm}
        </if>
</select>

</mapper>